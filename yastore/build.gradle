task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

configure(rootProject) {
    description = "Yet Another eStore"

    apply plugin: 'base' // To add "clean" task to the root project.
}

configure(allprojects) { project ->
    group = "com.yastore"
    version = "1.0.0-SNAPSHOT"

    ext.slf4jVersion = '1.7.7'
    ext.logbackVersion = '1.1.2'
    ext.jettyVersion = '9.2.0.M0'

    ext.springVersion = '4.0.5.RELEASE'
    ext.springSecurityVersion = '3.2.4.RELEASE'
    ext.springDataVersion = '1.6.1.RELEASE'
    ext.querydslVersion = '3.4.0'
    ext.hibernateVersion = '4.3.5.Final'
    ext.boneCPVersion = '0.8.0.RELEASE'
    ext.validationAPIVersion = '1.1.0.Final'

    ext.springRESTVersion = '2.1.1.RELEASE'
    ext.jacksonVersion = '1.9.13'

    ext.commonsLangVersion = '2.6'
    ext.commonsConfigurationVersion = '1.10'
    ext.commonsCollectionVersion = '3.2.1'
    ext.commonsBeanUtilsVersion = '1.9.2'

    ext.akkaVersion = '2.3.3'
    ext.jodaTimeVersion = '2.3'
    ext.jadiraVersion = '3.2.0.GA'
    ext.solrVersion = '4.9.0'
    ext.aspireVersion = '2.0-SNAPSHOT'
    ext.openCSVVersion = '2.3'

    ext.gradleScriptDir   = "${rootProject.projectDir}/buildScripts"

    configurations {
        provided
    }

    project.plugins.withType(JavaPlugin) {
        project.apply from: "${gradleScriptDir}/java.gradle"
        project.apply from: "${gradleScriptDir}/ide.gradle"
    }
    project.plugins.withType(WarPlugin) {
        project.apply from: "${gradleScriptDir}/webapp.gradle"
        project.apply from: "${gradleScriptDir}/ide.gradle"
    }

    repositories {
        // First check local cache before accessing central repository rootDir
        flatDir(dirs: [
            "file:///${rootProject.projectDir}/libs"
        ]);
        mavenCentral();

        // needed for some Solr dependencies
        maven {
            url "http://maven.restlet.org"
        }
    }

    ext.javadocLinks = [
        "http://docs.oracle.com/javase/7/docs/api/",
        "http://docs.oracle.com/javaee/7/api/",
        "http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/", // CommonJ
        "http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/",
        "http://glassfish.java.net/nonav/docs/v3/api/",
        "http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/",
        "http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/",
        "http://commons.apache.org/proper/commons-lang/javadocs/api-2.6/",
        "http://commons.apache.org/proper/commons-codec/apidocs/",
        "http://commons.apache.org/proper/commons-dbcp/apidocs/",
        "http://portals.apache.org/pluto/portlet-2.0-apidocs/",
        "http://aopalliance.sourceforge.net/doc/",
        "http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/",
        "http://ehcache.org/apidocs/",
        "http://quartz-scheduler.org/api/2.1.7/",
        "http://jackson.codehaus.org/1.9.4/javadoc/",
        "http://fasterxml.github.com/jackson-core/javadoc/2.3.0/",
        "http://fasterxml.github.com/jackson-databind/javadoc/2.3.0/",
        "http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs",
        "http://docs.spring.io/spring/docs/4.0.4.RELEASE/javadoc-api/"
    ] as String[]
}
